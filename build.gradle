plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'de.ebader'
version = '0.1.3-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Core Libraries
    implementation("com.fasterxml.jackson.core:jackson-databind:2.16.2")
    implementation 'org.yaml:snakeyaml:2.0'
    implementation("org.json:json:20240303")
    
    implementation 'javax.json:javax.json-api:1.1.4'
    implementation 'org.glassfish:javax.json:1.1.4'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    // Spring Boot Starters
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    
    // Spring Data and Database Connectivity
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.data:spring-data-jpa'
    implementation("org.hibernate.orm:hibernate-core:6.4.4.Final")
    implementation 'mysql:mysql-connector-java:8.0.28'
    implementation 'org.postgresql:postgresql:42.7.3'
    
    // Logging and Utilities
    implementation 'biz.paluch.logging:logstash-gelf:1.15.0'
    implementation 'commons-io:commons-io:2.11.0'
    
    // Test Dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'io.projectreactor:reactor-test:3.4.1'
    testImplementation 'com.h2database:h2:2.2.224'
    
    // Additional Database Drivers and Dependencies
    compileOnly fileTree(include: ["*.jar"], dir: "lib")
    implementation "com.ibm.db2.jcc:db2jcc:db2jcc4"
    implementation 'args4j:args4j:2.33'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'io.asyncer:r2dbc-mysql'
    runtimeOnly 'io.r2dbc:r2dbc-h2'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'de.ebader.pecunia.PecuniaApplication'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    archiveFileName = 'pecunia-0.1.3-SNAPSHOT-plain.jar'

    compileJava.options.encoding = 'UTF-8'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}
